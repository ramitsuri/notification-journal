name: Create Release

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_phone_and_wear_app:
    name: "Build phone and wear app"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Generate Release bundles
        run: ./gradlew bundleRelease

      - name: Sign phone bundle
        uses: r0adkll/sign-android-release@v1
        id: sign_phone_app
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Sign wear bundle
        uses: r0adkll/sign-android-release@v1
        id: sign_wear_app
        with:
          releaseDirectory: wearos/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Publish phone app to Play Console
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_CONSOLE_SERVICE_ACCOUNT_JSON }}
          packageName: com.ramitsuri.notificationjournal
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed

      - name: Publish wear OS app to Play Console
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_CONSOLE_SERVICE_ACCOUNT_JSON }}
          packageName: com.ramitsuri.notificationjournal
          releaseFiles: wearos/build/outputs/bundle/release/wearos-release.aab
          track: wear:internal
          status: completed

  build_macos_app:
    name: "Build macOS app"
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Generate package
        run: ./gradlew packageDistributionForCurrentOS

      - name: Upload macos app
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: core/build/compose/binaries/main/dmg/Journal-1.0.0.dmg

  build_windows_app:
    name: "Build windows app"
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Generate package
        run: ./gradlew packageDistributionForCurrentOS

      - name: Upload windows app
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: core/build/compose/binaries/main/msi/Journal-1.0.0.msi

  build_linux_app:
    name: "Build linux app"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Generate package
        run: ./gradlew packageDistributionForCurrentOS

      - name: Fix name
        run: |
          ls core/build/compose/binaries/main/deb/
          mv core/build/compose/binaries/main/deb/*.deb core/build/compose/binaries/main/deb/Journal-1.0.0.deb

      - name: Upload linux app
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: core/build/compose/binaries/main/deb/Journal-1.0.0.deb

  build_server:
    name: "Build server"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build server
        run: ./server/scripts/build.sh

      - name: Upload server app
        uses: actions/upload-artifact@v4
        with:
          name: server-app
          path: |
            server/build/libs/app.jar
            app_version.txt

  create_release:
    name: "Create release"
    needs: [build_windows_app, build_macos_app, build_linux_app, build_server]
    runs-on: ubuntu-latest
    steps:
      - name: Download macos-app
        uses: actions/download-artifact@v4
        with:
          name: macos-app

      - name: Download windows-app
        uses: actions/download-artifact@v4
        with:
          name: windows-app

      - name: Download linus-app
        uses: actions/download-artifact@v4
        with:
          name: linux-app

      - name: Download server-app
        uses: actions/download-artifact@v4
        with:
          name: server-app

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            Journal-1.0.0.msi
            Journal-1.0.0.dmg
            Journal-1.0.0.deb
            server/build/libs/app.jar
            app_version.txt
